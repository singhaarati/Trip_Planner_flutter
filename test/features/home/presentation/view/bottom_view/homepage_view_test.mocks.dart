// Mocks generated by Mockito 5.4.2 from annotations
// in trip_planner/test/features/home/presentation/view/bottom_view/homepage_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i8;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:trip_planner/core/failure/failure.dart' as _i6;
import 'package:trip_planner/features/destination/domain/entity/destination_entity.dart'
    as _i7;
import 'package:trip_planner/features/destination/domain/repository/destination_repository.dart'
    as _i2;
import 'package:trip_planner/features/destination/domain/use_case/destination_usecase.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIDestinationRepository_0 extends _i1.SmartFake
    implements _i2.IDestinationRepository {
  _FakeIDestinationRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DestinationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockDestinationUseCase extends _i1.Mock
    implements _i4.DestinationUseCase {
  @override
  _i2.IDestinationRepository get destinationRepository => (super.noSuchMethod(
        Invocation.getter(#destinationRepository),
        returnValue: _FakeIDestinationRepository_0(
          this,
          Invocation.getter(#destinationRepository),
        ),
        returnValueForMissingStub: _FakeIDestinationRepository_0(
          this,
          Invocation.getter(#destinationRepository),
        ),
      ) as _i2.IDestinationRepository);
  @override
  _i5.Future<
      _i3.Either<_i6.Failure,
          List<_i7.DestinationEntity>>> getAllDestination() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllDestination,
          [],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.DestinationEntity>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.DestinationEntity>>(
          this,
          Invocation.method(
            #getAllDestination,
            [],
          ),
        )),
        returnValueForMissingStub: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.DestinationEntity>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.DestinationEntity>>(
          this,
          Invocation.method(
            #getAllDestination,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.DestinationEntity>>>);
  @override
  _i5.Future<
      _i3.Either<_i6.Failure, List<_i7.DestinationEntity>>> getDestinationById(
          String? destinationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDestinationById,
          [destinationId],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.DestinationEntity>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.DestinationEntity>>(
          this,
          Invocation.method(
            #getDestinationById,
            [destinationId],
          ),
        )),
        returnValueForMissingStub: _i5
            .Future<_i3.Either<_i6.Failure, List<_i7.DestinationEntity>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.DestinationEntity>>(
          this,
          Invocation.method(
            #getDestinationById,
            [destinationId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.DestinationEntity>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> uploadPicture(_i8.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadPicture,
          [file],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #uploadPicture,
            [file],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, String>>.value(
                _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #uploadPicture,
            [file],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> createDestination(
          _i7.DestinationEntity? destination) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDestination,
          [destination],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #createDestination,
            [destination],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #createDestination,
            [destination],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> deleteDestinationById(
          String? destinationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteDestinationById,
          [destinationId],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteDestinationById,
            [destinationId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteDestinationById,
            [destinationId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
}
